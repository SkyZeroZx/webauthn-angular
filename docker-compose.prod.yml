version: '3.8'
services:
  postgres:
    image: postgres:16
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - webauthn-network

  redis:
    image: bitnami/redis:7.2.5
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=root
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - webauthn-network

  webauthn-api:
    restart: always
    ports:
      - '3000'
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    env_file:
      - .env
    links:
      - webauthn-client
      - postgres
      - redis
    networks:
      - webauthn-network

  webauthn-client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    restart: always
    ports:
      - '80:80'
      - '443:443/tcp'
      - '443:443/udp' # use UDP for usage of HTTP/3
    volumes:
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf # NgInx Config
      - ./docker/nginx/cert/localhost.crt:/etc/letsencrypt/live/example.com/localhost.crt
      - ./docker/nginx/cert/localhost.key:/etc/letsencrypt/live/example.com/localhost.key
      - ./docker/nginx/ssl-config/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
      - ./docker/nginx/cert/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
    networks:
      - webauthn-network

networks:
  webauthn-network:
    driver: bridge
